#!/usr/bin/env bash
set -ue
#
# This file is
#  * A central script to call all containers of this project
#  * A list of paths to all used containers 
#  * The settings file for the containers, for example to provide access to
#    external files
# 
# Executing this file starts the different containers.
# Usage: ./container <CONTAINERNAME> <CONTAINER ARGUMENTS>
#        ./container <CONTAINERNAME> --help
#

# === Settings ===========================================================

# Edit this section to change the container options of this project

# List the containers of this project here
# Format: [NAME]="PATH"
#
# Do not use spaces around the "=". You can use relative or absolute paths.
#
declare -A CONTAINER
CONTAINER=(
### SED REPLACE ###
)

# Files/directories that are available in the container besides the project
# directory.
# The follwing example makes the directory /home/user/datasets available
# inside the container as "/ext/input", read-only:
#
#   "/home/user/datasets/:/ext/input:ro"  (including quotes)
#
# The first path must exist. The second path can be freely chosen.
# Omit ":ro" to enable write access from within the container.
# Separate multiple entries by newlines.
#
EXTERNAL_FILES=(
# "/home/user/datasets/:/ext/input:ro" 
)


# Under which path this directory is available inside the container
BIND_PROJECT_TO="/proj"


# === END OF SETTINGS ========================================
#
# Editing anything below this file is only needed for advanced control
# over containers.

# Show a short help if needed

if [[ "$#" -gt 0 && ! -v "CONTAINER[${1-}]" ]]; then echo "Container "$1" is not defined" >&2; fi
if [[ "$#" = 0 || ! -v "CONTAINER[${1-}]" ]]; then
  cat >&2 <<EOF

How to start a container: "$0 <CONTAINERNAME> <CONTAINER COMMANDS>..."
How to get help:          "$0 <CONTAINERNAME> --help"
Available containers: ${!CONTAINER[@]}
EOF
  exit 1
fi


# === Code to start container =============================================
# This section identifies and starts the container when this script is 
# called. 

thisdir="$(dirname "${BASH_SOURCE[0]}")"
PROJECT_DIR="$thisdir"
CONTAINER="${CONTAINER[$1]}"
shift
exec "${CONTAINER}"/cmd "$@"
